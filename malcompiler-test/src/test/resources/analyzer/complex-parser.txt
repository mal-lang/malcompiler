defines = {
  Define(<complex.mal:6:1>, ID(<complex.mal:6:2>, "id"), "complex"),
  Define(<complex.mal:7:1>, ID(<complex.mal:7:2>, "version"), "1.0.0")
},
categories = {
  Category(<complex.mal:8:1>, ID(<complex.mal:8:10>, "Person"),
    meta = {
    },
    assets = {
      Asset(<complex.mal:9:3>, ABSTRACT, ID(<complex.mal:9:18>, "User"), NO_PARENT,
        meta = {
        },
        attacksteps = {
          AttackStep(<complex.mal:10:5>, ANY, ID(<complex.mal:10:7>, "impersonate"),
            tags = {ID(<complex.mal:10:20>, "hidden")},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:11:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                IDExpr(<complex.mal:11:10>, ID(<complex.mal:11:10>, "compromise")),
                IDExpr(<complex.mal:12:7>, ID(<complex.mal:12:7>, "stealInformation"))
              }
            )
          ),
          AttackStep(<complex.mal:13:5>, ANY, ID(<complex.mal:13:7>, "compromise"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:14:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:14:10>, IDExpr(<complex.mal:14:10>, ID(<complex.mal:14:10>, "computer")), IDExpr(<complex.mal:14:19>, ID(<complex.mal:14:19>, "stealSecret")))
              }
            )
          ),
          AttackStep(<complex.mal:15:5>, ANY, ID(<complex.mal:15:7>, "stealInformation"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:17:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:17:10>, StepExpr(<complex.mal:17:10>, IDExpr(<complex.mal:17:10>, ID(<complex.mal:17:10>, "computer")), IDExpr(<complex.mal:17:19>, ID(<complex.mal:17:19>, "internalHD"))), IDExpr(<complex.mal:17:30>, ID(<complex.mal:17:30>, "stealHDSecrets")))
              }
            )
          ),
          AttackStep(<complex.mal:18:5>, ANY, ID(<complex.mal:18:7>, "stealFolder"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:20:7>, OVERRIDES,
              variables = {
                Variable(<complex.mal:20:10>, ID(<complex.mal:20:14>, "MYVAR"), StepExpr(<complex.mal:20:22>, IDExpr(<complex.mal:20:22>, ID(<complex.mal:20:22>, "externalHD")), IDExpr(<complex.mal:20:33>, ID(<complex.mal:20:33>, "stealFolder"))))
              },
              reaches = {
                StepExpr(<complex.mal:21:7>, IDExpr(<complex.mal:21:7>, ID(<complex.mal:21:7>, "computer")), IDExpr(<complex.mal:21:16>, ID(<complex.mal:21:16>, "MYVAR")))
              }
            )
          )
        },
        variables = {
        }
      ),
      Asset(<complex.mal:23:3>, NOT_ABSTRACT, ID(<complex.mal:23:9>, "Student"), PARENT(ID(<complex.mal:23:25>, "User")),
        meta = {
        },
        attacksteps = {
        },
        variables = {
        }
      ),
      Asset(<complex.mal:24:3>, NOT_ABSTRACT, ID(<complex.mal:24:9>, "Teacher"), PARENT(ID(<complex.mal:24:25>, "User")),
        meta = {
        },
        attacksteps = {
          AttackStep(<complex.mal:25:5>, ANY, ID(<complex.mal:25:7>, "accessSchoolComputer"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
              Meta(<complex.mal:26:7>, ID(<complex.mal:26:7>, "user"), "An extra level of protection, their school computer must be used to impersonate them.")
            },
            NO_REQUIRES,
            Reaches(<complex.mal:27:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                IDExpr(<complex.mal:27:10>, ID(<complex.mal:27:10>, "compromise"))
              }
            )
          )
        },
        variables = {
        }
      )
    }
  ),
  Category(<complex.mal:30:1>, ID(<complex.mal:30:10>, "Hardware"),
    meta = {
    },
    assets = {
      Asset(<complex.mal:31:3>, NOT_ABSTRACT, ID(<complex.mal:31:9>, "Computer"), NO_PARENT,
        meta = {
        },
        attacksteps = {
          AttackStep(<complex.mal:33:5>, ANY, ID(<complex.mal:33:7>, "malwareInfection"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:34:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                IDExpr(<complex.mal:34:10>, ID(<complex.mal:34:10>, "interceptTraffic"))
              }
            )
          ),
          AttackStep(<complex.mal:35:5>, ANY, ID(<complex.mal:35:7>, "interceptTraffic"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:36:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                IDExpr(<complex.mal:36:10>, ID(<complex.mal:36:10>, "retrievePassword"))
              }
            )
          ),
          AttackStep(<complex.mal:37:5>, ALL, ID(<complex.mal:37:7>, "retrievePassword"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
              Meta(<complex.mal:38:7>, ID(<complex.mal:38:7>, "user"), "Retrieval of password is only possible if password is unencrypted")
            },
            NO_REQUIRES,
            Reaches(<complex.mal:39:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:39:10>, IDExpr(<complex.mal:39:10>, ID(<complex.mal:39:10>, "user")), IDExpr(<complex.mal:39:15>, ID(<complex.mal:39:15>, "impersonate")))
              }
            )
          ),
          AttackStep(<complex.mal:40:5>, ANY, ID(<complex.mal:40:7>, "bypassFirewall"),
            tags = {},
            cia = {},
            ttc = [TTCMulExpr(<complex.mal:40:23>, TTCFuncExpr(<complex.mal:40:23>, ID(<complex.mal:40:23>, "Exponential"), 0.050000), TTCFuncExpr(<complex.mal:40:43>, ID(<complex.mal:40:43>, "Gamma"), 1.200000, 1.700000))],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:41:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:41:10>, IDExpr(<complex.mal:41:10>, ID(<complex.mal:41:10>, "firewall")), IDExpr(<complex.mal:41:19>, ID(<complex.mal:41:19>, "bypassFirewall")))
              }
            )
          ),
          AttackStep(<complex.mal:42:5>, ANY, ID(<complex.mal:42:7>, "stealSecret"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:44:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:44:10>, IDExpr(<complex.mal:44:10>, ID(<complex.mal:44:10>, "HDDs")), IDExpr(<complex.mal:44:15>, ID(<complex.mal:44:15>, "stealHDSecrets")))
              }
            )
          ),
          AttackStep(<complex.mal:45:5>, DEFENSE, ID(<complex.mal:45:7>, "passwordEncrypted"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:46:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                IDExpr(<complex.mal:46:10>, ID(<complex.mal:46:10>, "retrievePassword"))
              }
            )
          ),
          AttackStep(<complex.mal:47:5>, EXIST, ID(<complex.mal:47:7>, "firewallProtected"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            Requires(<complex.mal:48:7>,
              variables = {
              },
              requires = {
                IDExpr(<complex.mal:48:10>, ID(<complex.mal:48:10>, "firewall"))
              }
            ),
            Reaches(<complex.mal:49:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:49:10>, IDExpr(<complex.mal:49:10>, ID(<complex.mal:49:10>, "firewall")), IDExpr(<complex.mal:49:19>, ID(<complex.mal:49:19>, "bypassFirewall")))
              }
            )
          )
        },
        variables = {
          Variable(<complex.mal:32:5>, ID(<complex.mal:32:9>, "HDDs"), UnionExpr(<complex.mal:32:16>, IDExpr(<complex.mal:32:16>, ID(<complex.mal:32:16>, "externalHD")), IDExpr(<complex.mal:32:30>, ID(<complex.mal:32:30>, "internalHD"))))
        }
      ),
      Asset(<complex.mal:51:3>, NOT_ABSTRACT, ID(<complex.mal:51:9>, "Firewall"), NO_PARENT,
        meta = {
        },
        attacksteps = {
          AttackStep(<complex.mal:52:5>, ALL, ID(<complex.mal:52:7>, "bypassFirewall"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:53:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:53:10>, IDExpr(<complex.mal:53:10>, ID(<complex.mal:53:10>, "computer")), IDExpr(<complex.mal:53:19>, ID(<complex.mal:53:19>, "retrievePassword"))),
                StepExpr(<complex.mal:54:7>, IDExpr(<complex.mal:54:7>, ID(<complex.mal:54:7>, "computer")), IDExpr(<complex.mal:54:16>, ID(<complex.mal:54:16>, "interceptTraffic"))),
                StepExpr(<complex.mal:56:7>, SubTypeExpr(<complex.mal:56:7>, IDExpr(<complex.mal:56:7>, ID(<complex.mal:56:7>, "user")), ID(<complex.mal:56:12>, "Teacher")), IDExpr(<complex.mal:56:21>, ID(<complex.mal:56:21>, "impersonate")))
              }
            )
          )
        },
        variables = {
        }
      ),
      Asset(<complex.mal:58:3>, NOT_ABSTRACT, ID(<complex.mal:58:9>, "Harddrive"), NO_PARENT,
        meta = {
        },
        attacksteps = {
          AttackStep(<complex.mal:59:5>, ANY, ID(<complex.mal:59:7>, "stealHDSecrets"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            NO_REACHES
          ),
          AttackStep(<complex.mal:60:5>, ANY, ID(<complex.mal:60:7>, "stealFolder"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            Reaches(<complex.mal:62:7>, OVERRIDES,
              variables = {
              },
              reaches = {
                StepExpr(<complex.mal:62:11>, StepExpr(<complex.mal:62:12>, IDExpr(<complex.mal:62:12>, ID(<complex.mal:62:12>, "folder")), TransitiveExpr(<complex.mal:62:19>, IDExpr(<complex.mal:62:20>, ID(<complex.mal:62:20>, "subFolder")))), IDExpr(<complex.mal:62:33>, ID(<complex.mal:62:33>, "accessFolder")))
              }
            )
          )
        },
        variables = {
        }
      ),
      Asset(<complex.mal:64:3>, NOT_ABSTRACT, ID(<complex.mal:64:9>, "SecretFolder"), NO_PARENT,
        meta = {
        },
        attacksteps = {
          AttackStep(<complex.mal:65:5>, ANY, ID(<complex.mal:65:7>, "accessFolder"),
            tags = {},
            cia = {},
            ttc = [],
            meta = {
            },
            NO_REQUIRES,
            NO_REACHES
          )
        },
        variables = {
        }
      )
    }
  )
},
associations = {
  Association(<complex.mal:69:3>, ID(<complex.mal:69:3>, "Computer"), ID(<complex.mal:69:13>, "studentComputer"), ONE_OR_MORE, ID(<complex.mal:69:39>, "Use"), ONE, ID(<complex.mal:69:50>, "student"), ID(<complex.mal:69:59>, "Student"),
    meta = {
    }
  ),
  Association(<complex.mal:70:3>, ID(<complex.mal:70:3>, "Computer"), ID(<complex.mal:70:13>, "teacherComputer"), ONE, ID(<complex.mal:70:36>, "Use"), ONE, ID(<complex.mal:70:47>, "teacher"), ID(<complex.mal:70:56>, "Teacher"),
    meta = {
    }
  ),
  Association(<complex.mal:71:3>, ID(<complex.mal:71:3>, "Computer"), ID(<complex.mal:71:13>, "computer"), ZERO_OR_MORE, ID(<complex.mal:71:29>, "Protect"), ONE, ID(<complex.mal:71:44>, "firewall"), ID(<complex.mal:71:54>, "Firewall"),
    meta = {
    }
  ),
  Association(<complex.mal:72:3>, ID(<complex.mal:72:3>, "Firewall"), ID(<complex.mal:72:13>, "firewall"), ONE, ID(<complex.mal:72:29>, "Protect"), ZERO_OR_MORE, ID(<complex.mal:72:44>, "user"), ID(<complex.mal:72:50>, "User"),
    meta = {
    }
  ),
  Association(<complex.mal:73:3>, ID(<complex.mal:73:3>, "Computer"), ID(<complex.mal:73:13>, "computer"), ONE, ID(<complex.mal:73:29>, "Storage"), ONE, ID(<complex.mal:73:44>, "user"), ID(<complex.mal:73:50>, "User"),
    meta = {
    }
  ),
  Association(<complex.mal:74:3>, ID(<complex.mal:74:3>, "Computer"), ID(<complex.mal:74:13>, "extHDComputer"), ONE, ID(<complex.mal:74:34>, "Use"), ONE, ID(<complex.mal:74:45>, "externalHD"), ID(<complex.mal:74:57>, "Harddrive"),
    meta = {
    }
  ),
  Association(<complex.mal:75:3>, ID(<complex.mal:75:3>, "Computer"), ID(<complex.mal:75:13>, "intHDComputer"), ONE, ID(<complex.mal:75:34>, "Contain"), ONE, ID(<complex.mal:75:49>, "internalHD"), ID(<complex.mal:75:61>, "Harddrive"),
    meta = {
    }
  ),
  Association(<complex.mal:76:3>, ID(<complex.mal:76:3>, "Harddrive"), ID(<complex.mal:76:14>, "internalHD"), ONE, ID(<complex.mal:76:32>, "Contain"), ZERO_OR_MORE, ID(<complex.mal:76:47>, "folder"), ID(<complex.mal:76:55>, "SecretFolder"),
    meta = {
    }
  ),
  Association(<complex.mal:77:3>, ID(<complex.mal:77:3>, "SecretFolder"), ID(<complex.mal:77:17>, "folder"), ONE, ID(<complex.mal:77:31>, "Contain"), ZERO_OR_MORE, ID(<complex.mal:77:46>, "subFolder"), ID(<complex.mal:77:57>, "SecretFolder"),
    meta = {
    }
  )
}
