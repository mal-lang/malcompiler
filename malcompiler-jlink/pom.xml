<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2019-2022 Foreseeti AB

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.mal-lang</groupId>
    <artifactId>malcompiler</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>malcompiler-jlink</artifactId>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>jlink packaging of the compiler for the Meta Attack Language</description>
  <url>https://mal-lang.org/</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Mikael Modin</name>
      <email>mikael.modin@foreseeti.com</email>
      <organization>foreseeti</organization>
      <organizationUrl>https://www.foreseeti.com/</organizationUrl>
    </developer>
    <developer>
      <name>Simon Wrede</name>
      <email>simon.wrede@foreseeti.com</email>
      <organization>foreseeti</organization>
      <organizationUrl>https://www.foreseeti.com/</organizationUrl>
    </developer>
    <developer>
      <name>Max WÃ¤llstedt</name>
      <email>max.wallstedt@foreseeti.com</email>
      <organization>foreseeti</organization>
      <organizationUrl>https://www.foreseeti.com/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/mal-lang/malcompiler.git</connection>
    <developerConnection>scm:git:ssh://github.com:mal-lang/malcompiler.git</developerConnection>
    <url>https://github.com/mal-lang/malcompiler/tree/master/malcompiler-jlink</url>
  </scm>

  <properties>
    <jacoco.skip>true</jacoco.skip>
    <gpg.skip>true</gpg.skip>
    <maven.install.skip>true</maven.install.skip>
    <maven.deploy.skip>true</maven.deploy.skip>
    <jlink.output>${project.build.directory}/${project.build.finalName}</jlink.output>
    <jlink.modules>java.compiler,java.desktop,java.logging</jlink.modules>
    <jlink.dependencies>${jlink.output}/dependencies</jlink.dependencies>
    <dependencies.output>${project.build.directory}/dependencies</dependencies.output>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.mal-lang</groupId>
      <artifactId>malcompiler-cli</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-jlink-exec-exists</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireFilesExist>
                  <files>
                    <file>${jlink.exec}</file>
                  </files>
                </requireFilesExist>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testResources</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${dependencies.output}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-jlink-runtime</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${jlink.exec}</executable>
              <arguments>
                <argument>--compress=2</argument>
                <argument>--strip-debug</argument>
                <argument>--no-header-files</argument>
                <argument>--no-man-pages</argument>
                <argument>--output=${jlink.output}</argument>
                <argument>--add-modules=${jlink.modules}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>include-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${jlink.dependencies}">
                  <fileset dir="${dependencies.output}"/>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create-archive</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${project.basedir}/src/assembly/${assembly.descriptor}</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>Linux</name>
        </os>
      </activation>
      <properties>
        <jlink.exec>${java.home}/bin/jlink</jlink.exec>
        <assembly.descriptor>unix.xml</assembly.descriptor>
      </properties>
      <build>
        <finalName>${project.parent.artifactId}-${project.version}-linux</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>include-launcher</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.basedir}/src/main/resources/malc" todir="${jlink.output}/bin"/>
                    <chmod file="${jlink.output}/bin/malc" perm="775"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>macos</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <jlink.exec>${java.home}/bin/jlink</jlink.exec>
        <assembly.descriptor>unix.xml</assembly.descriptor>
      </properties>
      <build>
        <finalName>${project.parent.artifactId}-${project.version}-macos</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>include-launcher</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.basedir}/src/main/resources/malc" todir="${jlink.output}/bin"/>
                    <chmod file="${jlink.output}/bin/malc" perm="775"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <jlink.exec>${java.home}/bin/jlink.exe</jlink.exec>
        <assembly.descriptor>windows.xml</assembly.descriptor>
      </properties>
      <build>
        <finalName>${project.parent.artifactId}-${project.version}-windows</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>include-launcher</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.basedir}/src/main/resources/malc" todir="${jlink.output}/bin"/>
                    <copy file="${project.basedir}/src/main/resources/malc.bat" todir="${jlink.output}/bin"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
